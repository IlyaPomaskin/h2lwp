apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    namespace 'com.ipapps.homm2.livewallpaper'

    compileSdk 34

    buildFeatures {
        compose true
    }

    defaultConfig {
        applicationId 'com.ipapps.homm2.livewallpaper'

        minSdkVersion 22
        targetSdkVersion 34

        // These paths are set relative to the android project directory
        versionCode((new File('../version_code.txt')).getText('UTF-8').trim().toInteger())
        versionName((new File('../version.txt')).getText('UTF-8').trim())

        externalNativeBuild {
            ndkBuild {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                arguments '-j4'
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    signingConfigs {
        release {
            storeFile({
                def keystorePath = System.getenv('FHEROES2_KEYSTORE')

                return keystorePath ? file(keystorePath) : null
            }.call())

            storePassword({
                def keystorePass = System.getenv('FHEROES2_KEYSTORE_PASSWORD')

                return keystorePass ? keystorePass : ''
            }.call())

            keyAlias({
                def keyAlias = System.getenv('FHEROES2_KEY_ALIAS')

                return keyAlias ? keyAlias : ''
            }.call())

            keyPassword({
                def keyPass = System.getenv('FHEROES2_KEY_PASSWORD')

                return keyPass ? keyPass : ''
            }.call())
        }
    }

    buildTypes {
        debug {
            externalNativeBuild {
                ndkBuild {
                    cFlags '-DWITH_DEBUG', '-Werror'
                }
            }
        }

        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs_nio:2.0.3'

    implementation 'com.github.andycandy-de:simple-android-bridge:1.0.2'

    implementation project(':isotools')
    implementation project(':sdl2')

    implementation group: 'commons-io', name: 'commons-io', version: '2.13.0'

    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$androidx_compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.material:material:$androidx_compose_version"
    implementation "androidx.compose.animation:animation:$androidx_compose_version"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.navigation:navigation-compose:2.4.0-rc01"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'com.google.android.material:material:1.9.0'
}

tasks.register('buildJs', Exec) {
    workingDir '../../h2lwp-settings'
    commandLine 'npm', 'run', 'build'
}

tasks.register('copyH2D', Copy) {
    from('../../files/data') {
        include '*.h2d'
    }
    into 'src/main/assets/files/data'
}

tasks.register('copyTranslations', Copy) {
    from('../../files/lang') {
        include '*.mo'
    }
    into 'src/main/assets/files/lang'
}

preBuild {
    dependsOn buildJs, copyH2D, copyTranslations
}
